from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
import os

# üîê Bot Configurations
BOT_TOKEN = "8071517946:AAFJNR00L3Il4cruOdaGeCtAvdNlwx47nn4"
CHANNEL_ID = "-1002122745662"  # ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤ ID
OWNER_USERNAME = "@Eva_Chowdhury_pori"
DOWNLOAD_LINK = "https://example.com/download-link"  # ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶¨‡¶∏‡¶æ‡¶ì

# ‚úÖ /start command
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    user_id = user.id

    # Check if user joined the channel
    chat_member = await context.bot.get_chat_member(chat_id=CHANNEL_ID, user_id=user_id)

    if chat_member.status in ["member", "administrator", "creator"]:
        keyboard = [
            [InlineKeyboardButton("‚úÖ Verify", callback_data="verify")],
            [InlineKeyboardButton("üîó Link to Download", url=DOWNLOAD_LINK)],
            [InlineKeyboardButton("üìû Contact", url=f"https://t.me/{OWNER_USERNAME.lstrip('@')}")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text("‚úÖ ‡¶Ü‡¶™‡¶®‡¶ø ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡ßá ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡¶®!", reply_markup=reply_markup)
    else:
        join_keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("üì¢ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤ Join ‡¶ï‡¶∞‡ßÅ‡¶®", url="https://t.me/+mwyluTYFDeFmNDI1")]
        ])
        await update.message.reply_text(
            "‚ùå ‡¶Ü‡¶ó‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡ßá Join ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ ‡¶Ü‡¶¨‡¶æ‡¶∞ /start ‡¶¶‡¶ø‡¶®‡•§", reply_markup=join_keyboard
        )

# üîò Verify Callback
async def verify_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id
    chat_member = await context.bot.get_chat_member(chat_id=CHANNEL_ID, user_id=user_id)

    if chat_member.status in ["member", "administrator", "creator"]:
        await query.answer("‚úÖ Verification ‡¶∏‡¶´‡¶≤ ‡¶π‡ßü‡ßá‡¶õ‡ßá!")
        await query.edit_message_text(
            text="‚úÖ Access Granted!\nüîó ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶•‡ßá‡¶ï‡ßá ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®:",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üîó Download Now", url=DOWNLOAD_LINK)],
                [InlineKeyboardButton("üìû Contact", url=f"https://t.me/{OWNER_USERNAME.lstrip('@')}")]
            ])
        )
    else:
        await query.answer("‚ùå ‡¶Ü‡¶ó‡ßá ‡¶ö‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶≤‡ßá Join ‡¶ï‡¶∞‡ßÅ‡¶®!", show_alert=True)

# ‚ñ∂Ô∏è Run Bot
def main():
    app = Application.builder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(verify_callback, pattern="^verify$"))

    print("ü§ñ Bot ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶π‡ßü‡ßá‡¶õ‡ßá...")
    app.run_polling()

if __name__ == "__main__":
    main()
